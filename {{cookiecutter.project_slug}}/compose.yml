volumes:
  '{{ cookiecutter.project_slug }}_postgres_data': {}
  '{{ cookiecutter.project_slug }}_postgres_data_backups': {}
  '{{ cookiecutter.project_slug }}_redis_data': {}

services:
  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: '{{ cookiecutter.project_slug }}_node'
    container_name: '{{ cookiecutter.project_slug }}_node'
    depends_on:
      - ui
    volumes:
      - '.:/app:z'
    command: npm run dev
    ports:
      - '3000:3000'
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - '3001:3001'

  ui: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: '{{ cookiecutter.project_slug }}_ui'
    container_name: '{{ cookiecutter.project_slug }}_ui'
    depends_on:
      - postgres
      - redis
    volumes:
      - '.:/app:z'
    env_file:
      - ./.env/.django
      - ./.env/.postgres
      - ./.env/.redis
      - ./.env/.secret
    ports:
      - '8000:8000'
    command: /start-ui

  api:
    <<: *django
    image: '{{ cookiecutter.project_slug }}_api'
    container_name: '{{ cookiecutter.project_slug }}_api'
    depends_on:
      - postgres
      - redis
    ports:
      - '8080:8000'
    command: /start-api

  worker:
    <<: *django
    image: '{{ cookiecutter.project_slug }}_worker'
    container_name: '{{ cookiecutter.project_slug }}_worker'
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-worker

  scheduler:
    <<: *django
    image: '{{ cookiecutter.project_slug }}_scheduler'
    container_name: '{{ cookiecutter.project_slug }}_scheduler'
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-scheduler

  flower:
    <<: *django
    image: '{{ cookiecutter.project_slug }}_flower'
    container_name: '{{ cookiecutter.project_slug }}_flower'
    ports:
      - '5555:5555'
    command: /start-flower

  postgres:
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    image: '{{ cookiecutter.project_slug }}_postgres'
    container_name: '{{ cookiecutter.project_slug }}_postgres'
    volumes:
      - '{{ cookiecutter.project_slug }}_postgres_data:/var/lib/postgresql/data'
      - '{{ cookiecutter.project_slug }}_postgres_data_backups:/backups'
      - ./restore:/restore
    env_file:
      - ./.env/.postgres
      - ./.env/.secret
    ports:
      - '5432:5432'

  redis:
    image: redis:6
    container_name: '{{ cookiecutter.project_slug }}_redis'
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass '$${REDIS_PASSWORD}'
    volumes:
      - '{{ cookiecutter.project_slug }}_redis_data:/data'
    env_file:
      - ./.env/.redis
      - ./.env/.secret
    ports:
      - '6379:6379'
